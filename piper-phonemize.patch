diff --git a/CMakeLists.txt b/CMakeLists.txt
index ec7b501..1d914e9 100644
--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -10,6 +10,8 @@ project(
     LANGUAGES CXX
 )
 
+option(BUILD_SHARED_LIBS "Build using shared libraries" ON)
+
 if(MSVC)
     # Force compiler to use UTF-8 for IPA constants
     add_compile_options("$<$<C_COMPILER_ID:MSVC>:/utf-8>")
@@ -17,12 +19,14 @@ if(MSVC)
 
 elseif(NOT APPLE)
     # Linux flags
-    string(APPEND CMAKE_CXX_FLAGS " -Wall -Wextra -Wl,-rpath,'$ORIGIN'")
+    string(APPEND CMAKE_CXX_FLAGS " -Wall -Wextra")
+    list(APPEND CMAKE_BUILD_RPATH "$ORIGIN")
+    list(APPEND CMAKE_INSTALL_RPATH "$ORIGIN")
     string(APPEND CMAKE_C_FLAGS " -Wall -Wextra")
 endif()
 
 add_library(
-    piper_phonemize SHARED
+    piper_phonemize
     src/phonemize.cpp
     src/phoneme_ids.cpp
     src/tashkeel.cpp
@@ -36,12 +40,33 @@ set_target_properties(piper_phonemize PROPERTIES
 
 # ---- onnxruntime ---
 
-# Look for onnxruntime files in <root>/lib
-if(NOT DEFINED ONNXRUNTIME_DIR)
-    if(NOT DEFINED ONNXRUNTIME_VERSION)
-        set(ONNXRUNTIME_VERSION "1.14.1")
+set(onnxruntime_FOUND FALSE)
+
+if(NOT DEFINED ONNXRUNTIME_VERSION)
+    set(ONNXRUNTIME_VERSION "1.14.1")
+endif()
+
+if(NOT onnxruntime_FOUND AND NOT DEFINED ONNXRUNTIME_DIR)
+    find_package(onnxruntime "${ONNXRUNTIME_VERSION}")
+    if(onnxruntime_FOUND)
+        list(APPEND ONNXRUNTIME_LINK_LIBRARIES "onnxruntime::onnxruntime")
+    endif()
+endif()
+
+if(NOT onnxruntime_FOUND AND NOT DEFINED ONNXRUNTIME_DIR)
+    find_library(ONNXRUNTIME_LIBRARY onnxruntime)
+    if(NOT "${ONNXRUNTIME_LIBRARY}" STREQUAL "ONNXRUNTIME_LIBRARY-NOTFOUND")
+        find_path(ONNXRUNTIME_PATH "onnxruntime_cxx_api.h" PATH_SUFFIXES "onnxruntime")
+        if(NOT "${ONNXRUNTIME_PATH}" STREQUAL "ONNXRUNTIME_PATH-NOTFOUND")
+            list(APPEND ONNXRUNTIME_INCLUDE_DIRECTORIES "${ONNXRUNTIME_PATH}")
+            list(APPEND ONNXRUNTIME_LINK_LIBRARIES "${ONNXRUNTIME_LIBRARY}")
+            set(onnxruntime_FOUND TRUE)
+        endif()
     endif()
+endif()
 
+# Look for onnxruntime files in <root>/lib
+if(NOT onnxruntime_FOUND AND NOT DEFINED ONNXRUNTIME_DIR)
     if(WIN32)
         # Windows x86-64
         set(ONNXRUNTIME_PREFIX "onnxruntime-win-x64-${ONNXRUNTIME_VERSION}")
@@ -95,19 +120,31 @@ if(NOT DEFINED ONNXRUNTIME_DIR)
     endif()
 endif()
 
+if(NOT onnxruntime_FOUND AND DEFINED ONNXRUNTIME_DIR)
+    list(APPEND ONNXRUNTIME_INCLUDE_DIRECTORIES "${ONNXRUNTIME_DIR}/include")
+    list(APPEND ONNXRUNTIME_LINK_DIRECTORIES "${ONNXRUNTIME_DIR}/lib")
+    list(APPEND ONNXRUNTIME_LINK_LIBRARIES "onnxruntime")
+    set(onnxruntime_FOUND TRUE)
+endif()
+
 # ---- espeak-ng ---
 
 if(NOT DEFINED ESPEAK_NG_DIR)
     set(ESPEAK_NG_DIR "${CMAKE_CURRENT_BINARY_DIR}/ei")
 
+    find_program(GIT_PROGRAM "git" REQUIRED)
     include(ExternalProject)
     ExternalProject_Add(
         espeak_ng_external
         PREFIX "${CMAKE_CURRENT_BINARY_DIR}/e"
-        URL "https://github.com/rhasspy/espeak-ng/archive/0f65aa301e0d6bae5e172cc74197d32a6182200f.zip"
+        GIT_REPOSITORY "https://github.com/rhasspy/espeak-ng"
+        GIT_TAG "0f65aa301e0d6bae5e172cc74197d32a6182200f"
+        GIT_PROGRESS TRUE
+        UPDATE_DISCONNECTED TRUE
+        PATCH_COMMAND "${GIT_PROGRAM}" "apply" "${CMAKE_CURRENT_SOURCE_DIR}/espeak-ng.patch"
         CMAKE_ARGS -DCMAKE_INSTALL_PREFIX:PATH=${ESPEAK_NG_DIR}
         CMAKE_ARGS -DUSE_ASYNC:BOOL=OFF
-        CMAKE_ARGS -DBUILD_SHARED_LIBS:BOOL=ON
+        CMAKE_ARGS "-DBUILD_SHARED_LIBS:BOOL=${BUILD_SHARED_LIBS}"
         CMAKE_ARGS -DUSE_MBROLA:BOOL=OFF
         CMAKE_ARGS -DUSE_LIBSONIC:BOOL=OFF
         CMAKE_ARGS -DUSE_LIBPCAUDIO:BOOL=OFF
@@ -116,6 +153,7 @@ if(NOT DEFINED ESPEAK_NG_DIR)
         CMAKE_ARGS -DEXTRA_cmn:BOOL=ON
         CMAKE_ARGS -DEXTRA_ru:BOOL=ON
         CMAKE_ARGS -DCMAKE_C_FLAGS="-D_FILE_OFFSET_BITS=64"
+        USES_TERMINAL_DOWNLOAD TRUE
     )
     add_dependencies(piper_phonemize espeak_ng_external)
 endif()
@@ -123,23 +161,27 @@ endif()
 
 # ---- Declare library ----
 
+set(PIPER_PHONEMIZE_INTERFACE_INCLUDE_DIRECTORY "${CMAKE_CURRENT_BINARY_DIR}/include")
+file(COPY "src/" DESTINATION "${PIPER_PHONEMIZE_INTERFACE_INCLUDE_DIRECTORY}/piper-phonemize" FILES_MATCHING PATTERN "*.h" PATTERN "*.hpp")
+
 target_include_directories(
     piper_phonemize PUBLIC
     "$<BUILD_INTERFACE:${PROJECT_SOURCE_DIR}/src>"
     ${ESPEAK_NG_DIR}/include
-    ${ONNXRUNTIME_DIR}/include
+    ${ONNXRUNTIME_INCLUDE_DIRECTORIES}
+    INTERFACE "${PIPER_PHONEMIZE_INTERFACE_INCLUDE_DIRECTORY}"
 )
 
 target_link_directories(
     piper_phonemize PUBLIC
     ${ESPEAK_NG_DIR}/lib
-    ${ONNXRUNTIME_DIR}/lib
+    ${ONNXRUNTIME_LINK_DIRECTORIES}
 )
 
 target_link_libraries(
     piper_phonemize
     espeak-ng
-    onnxruntime
+    ${ONNXRUNTIME_LINK_LIBRARIES}
 )
 
 target_compile_features(piper_phonemize PUBLIC cxx_std_17)
@@ -207,7 +249,7 @@ install(
     LIBRARY DESTINATION ${CMAKE_INSTALL_LIBDIR})
 
 install(
-    DIRECTORY ${CMAKE_SOURCE_DIR}/src/
+    DIRECTORY "${CMAKE_CURRENT_SOURCE_DIR}/src/"
     DESTINATION include/piper-phonemize
     FILES_MATCHING
     PATTERN "*.h"
@@ -218,7 +260,7 @@ install(
     ARCHIVE DESTINATION ${CMAKE_INSTALL_BINDIR})
 
 install(
-    FILES ${CMAKE_SOURCE_DIR}/etc/libtashkeel_model.ort
+    FILES "${CMAKE_CURRENT_SOURCE_DIR}/etc/libtashkeel_model.ort"
     TYPE DATA)
 
 # Dependencies
@@ -226,10 +268,12 @@ install(
     DIRECTORY ${ESPEAK_NG_DIR}/
     DESTINATION ${CMAKE_INSTALL_PREFIX})
 
-install(
-    DIRECTORY ${ONNXRUNTIME_DIR}/include/
-    DESTINATION ${CMAKE_INSTALL_INCLUDEDIR})
+if(DEFINED ONNXRUNTIME_DIR)
+    install(
+        DIRECTORY ${ONNXRUNTIME_DIR}/include/
+        DESTINATION ${CMAKE_INSTALL_INCLUDEDIR})
 
-install(
-    DIRECTORY ${ONNXRUNTIME_DIR}/lib/
-    DESTINATION ${CMAKE_INSTALL_LIBDIR})
+    install(
+        DIRECTORY ${ONNXRUNTIME_DIR}/lib/
+        DESTINATION ${CMAKE_INSTALL_LIBDIR})
+endif()
diff --git a/espeak-ng.patch b/espeak-ng.patch
new file mode 100644
index 0000000..a51d146
--- /dev/null
+++ b/espeak-ng.patch
@@ -0,0 +1,10 @@
+diff --git a/src/ucd-tools/CMakeLists.txt b/src/ucd-tools/CMakeLists.txt
+index 2050c114..4bd7d17e 100644
+--- a/src/ucd-tools/CMakeLists.txt
++++ b/src/ucd-tools/CMakeLists.txt
+@@ -1,4 +1,4 @@
+-add_library(ucd STATIC
++add_library(ucd OBJECT
+   src/case.c
+   src/categories.c
+   src/ctype.c
